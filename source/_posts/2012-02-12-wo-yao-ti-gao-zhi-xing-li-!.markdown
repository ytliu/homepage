---
layout: post
title: "我要提高执行力！"
date: 2012-02-12 23:24
comments: true
categories: 周计划 生活 
---

已经快十二点了，但是这周的任务还没完成。而这一周是自己要开始执行计划的第一周，因为周末去北京开会，以为今天会比较早回来，没想到到达寝室已经是这个时间了。不过，我决定就算再困也一定要把第一周的任务完成！执行力的退化就是一次又一次地寻找理由妥协而造成的，不过今年的计划最后能完成多少，如果第一次就因为一个或许比较不可避免的原因推迟了，我也就不相信自己将来能做的多好了。何况下周事情感觉比这周还要多，拖延只会造成更严重的滞后，这不是我希望的，也就强迫自己一次吧~~

说实话，当放假在家的时候斌哥告诉我要去北京开会的时候我可高兴自豪了，不要嘲笑我，就是，开会有什么好开心的，又累又没有假期的，不过在这种时候有一种这么重要的锻炼，对于自己来说确实是一种感激。总的来说这次去北京收获真的很大，除了见识了这么多教授，对他们常说的基金有了实质性的了解之外，在路上和北京还和海波斌哥他们讨论了那么多有趣的东西，还和小杜杜逛了一个小时的清华，真的从内心里感到惬意，甚至于上飞机的时候还有那么一丝的不舍呢。

基金的事情就不说了，可能还是谨慎点好，说说这次来北京吧，这是自己有生以来第二次来北京，第一次是初中毕业参加航模比赛和一堆好朋友来，想起当时的稚嫩，都有一种难以说出口的感受。今天在小杜杜的带领下小逛清货，更是感受到一种物是人非的感受。应该快7年了吧，我们就这样从未成年到成年，从幼稚到青春再到渐渐地成熟，依然不变的是那份最最纯真的友谊和我们共同的默契和关心。今年我一定要再去一次北京，自己去，看看同学，和你们更自由地聊聊。今天清华园二校门突然映入眼帘，将自己带回7年前的那么一瞬间的杜杜所谓的moment，在那些走过的石砖上听杜杜的介绍和聊话，真的是一份最最惬意的享受。相信不久之后一定能再次相见，谢谢你的热情款待哦。

还有今天飞机上和斌哥的聊天，让我回想起了好多小时候的事，想起了自己某天的梦想，想起自己曾经对它那么地热爱，对他那么地崇敬，想起那时候的好朋友们现在都行走在自己的道路上，我们走在自己原先的梦想道路上吗？十年、二十年后我们又聚在一起还能那么清晰地回忆那段记忆，能够一个细数那么一些曾经的梦想吗？

<!-- more -->

关于这个学期的计划，其实我已经列的很清楚了，同样我也很清楚自己很难将上面的东西全部很完美地完成，事情或许比想象的复杂许多，但就像斌哥提到的词"修炼"，我很庆幸自己在读博之前还有那么一大段可控的预修炼期，也很明白这段时间对于自己的重要性，不管怎样，我都希望明年的年度总结会上将计划和目标解密的那一瞬间不会那么地尴尬。相信天道酬勤。

最后的篇幅留给这周必读的那篇paper，其实这篇是我去北京前一天才决定下来的，除了Evaluation其余的在来回的路上差不多看掉了，因为Naruil在周四的组会上讲过，当时就觉得这真的是一篇很牛逼的工作，真的属于一般超级有用的榔头，这次看了下里面真的有好多工具可以自己尝试用下。paper的title叫
        Virtuoso: Narrowing the Semantic Gap in Virtual Machine Introspection
发在S&P'11上，是由MIT和GIT(Georgia Institute of Technology)的人做的，故事简单来说是这样的：
        在现在虚拟化环境中，虚拟机监控器很难获得虚拟机的高层语义，也就不能方便的对虚拟机进行检测保护，
        由此很多研究者提出了VMI(Virtual Machine Introspection)技术，但是有个问题，如果虚拟机本身是不安
        全的，那它所提供的信息也就不一定是可信赖的，于是乎对于这种技术，又有很多研究者针对该技术提出了
        很多解决方案，但大多都要开发者对于系统的领域知识非常熟悉，而且针对每一种不同的操作系统甚至内核
        版本都要设计其相对应的Introspection Tools，这样不但工作量太大，也容易写出error-prone的tools，于
        是乎，该作者提出一种方法，用一种简单的方法将在一台虚拟机上跑的应用反向工程到另一种操作系统的环
        境中来，由该操作系统作为secure domain，对客户虚拟机内存等资源进行监控。
其实讲了那么多，大部分是motivation，就是用一种反向工程的方式来做VMI。但我对这篇paper最感兴趣的是这个reverse engineering的方法！这个方法由作者的一张图可以很清晰地表达出来：
![Virtuoso's usage](http://ytliu.info/images/2012-02-12-1.png "An example of Virtuoso's usage")

整个过程由log trace, trace analyze, instruction translator, run outside of VM等步骤组成，具体的流程或许说几千个字都说不完，这里也不纠缠了，如果有兴趣可以自己去看，这里想提下的就是里面提到的几个理论和工具，这些是我很想去尝试下的：
        dynamic slicing algorithm, Volatility(a framework for volatile memory analysis writen in Python), 
        PyXa, XenAccess

这些留到过两天比较有空的时候去试吧~现在要洗澡睡觉觉啦~
